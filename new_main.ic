/*!
 * \file   new_main.ic
 * \author Joseph Warner (warner.512@osu.edu)
 * \date   Spring, 2013
 * \brief  Controls the robot in the competition
 */

// Import the movement library
#use movement.ic

// Import sensor libraries
#use sensor_controller.ic
#use sensor_cds.ic
#use sensor_switch.ic

// Import the elevator library
#use elevator.ic

/*! Analog optosensor libraries */
#use fencdr2.icb
#use fencdr3.icb

int performance_test_4() {
    // Wait for light
    printf("Waiting for light.");
    while(sensor_cds_sees_start_light());
    sleep(0.25);
    
    // Forward 22 inches
    movement_straight(50, 21.0);
    movement_straight(-30, 0.5);
    sleep(1.00);
    
    // Left 90
    movement_turn_left(75);
    sleep(1.00);
    
    // Forward 32
    movement_straight(75, 28.0);
    sleep(1.00);
    
    // Right 90
    movement_turn_right(90);
    sleep(1.00);
    
    // Forward 5
    movement_straight(50, 5.0);
    sleep(1.00);
}

int calibrate() {
    movement_turn_right(90);
    printf("r:%d l:%d", encoder2_counts, encoder3_counts);
}

int main() {
    int min = 255;
    int max = 0;
    
    // Encoder 2 thresholds (right)
    encoder2_low_threshold = 102;
    encoder2_high_threshold = 104;
    
    // Encoder 3 thresholds (left)
    encoder3_low_threshold = 175;
    encoder3_high_threshold = 185;
    
    // Set servo motor calibrations
    exp_servo_min[1] = 647;
    exp_servo_max[1] = 3313;
    
    // Set all motors to be off
    movement_all_off();
    
    // Wait for start button to be pressed
    printf("Press button to start run\n");
    while (!sensor_controller_start_button());
    printf("Run starting...\n");
    
    // Wait one second
    sleep(1.0);
    
    // Execute the current performance test code
    performance_test_4();
    //calibrate();
    
    sleep(1.0);
    
    //printf("Turn completed\n");
}
