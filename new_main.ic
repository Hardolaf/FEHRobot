/*!
 * \file   new_main.ic
 * \author Joseph Warner (warner.512@osu.edu)
 * \date   Spring, 2013
 * \brief  Controls the robot in the competition
 */

// Import the movement library
#use movement.ic

// Import sensor libraries
#use sensor_controller.ic
#use sensor_cds.ic
#use sensor_switch.ic
#use sensor_optosensor.ic

// Import the elevator library
#use elevator.ic

/*! Analog optosensor libraries */
#use fencdr2.icb
#use fencdr3.icb

int performance_test_4() {
    // Wait for light
    printf("Waiting for light.");
    while(sensor_cds_sees_start_light());
    sleep(0.25);
    
    // Backwards!
    printf("Backwards\n");
    start_process(movement_straight(-50, 20.0), 4000);
    sleep(2.0);
    movement_all_off();
    sleep(2.0);
    
    // Up the stairs
    printf("Up stairs\n");
    movement_straight(100, 43.0);
    sleep(2.00);
    
    // Get to the first line
    printf("First line\n");
    movement_motor_update(MOTOR_LEFT, 50);
    movement_motor_update(MOTOR_RIGHT, 50);
    
    while (!sensor_optosensor_see_line());
    
    movement_all_off();
    sleep(1.0);
    
    // Right 90
    printf("Turn 1\n");
    movement_turn_right(80);
    sleep(1.0);
    
    // Go to the next line
    printf("Next line plz\n");
    movement_straight(50, 4.0);
    sleep(0.5);
    
    printf("Wait for line\n");
    movement_motor_update(MOTOR_LEFT, 50);
    movement_motor_update(MOTOR_RIGHT, 50);
    
    while (!sensor_optosensor_see_line());
    
    movement_all_off();
    sleep(1.0);
    
    // Back into the WALL!
    printf("Turn back\n");
    movement_turn_right(90);
    sleep(1.0);
    
    printf("Into the wall\n");
    start_process(movement_straight(-50, 13.0), 3000);
    sleep(1.0);
    
    movement_all_off();
    sleep(1.0);
    
    // Forward to glory!
    printf("To glory!\n");
    movement_straight(50, 23.0);
    sleep(1.0);
}

int calibrate() {
    movement_turn_right(90);
    printf("r:%d l:%d", encoder2_counts, encoder3_counts);
}

int calibrate_optosensors() {
    while(1) {
        printf("%d\n", analog(5));
        sleep(0.1);
    }
}
int main() {
    int min = 255;
    int max = 0;
    
    // Encoder 2 thresholds (right)
    encoder2_low_threshold = 102;
    encoder2_high_threshold = 104;
    
    // Encoder 3 thresholds (left)
    encoder3_low_threshold = 175;
    encoder3_high_threshold = 185;
    
    // Set servo motor calibrations
    exp_servo_min[1] = 647;
    exp_servo_max[1] = 3313;
    
    // Set all motors to be off
    movement_all_off();
    
    // Wait for start button to be pressed
    printf("Press button to start run\n");
    while (!sensor_controller_start_button());
    printf("Run starting...\n");
    
    // Wait one second
    sleep(1.0);
    
    // Execute the current performance test code
    performance_test_4();
    //calibrate();
    //calibrate_optosensors();
    
    sleep(1.0);
    
    //printf("Turn completed\n");
}
